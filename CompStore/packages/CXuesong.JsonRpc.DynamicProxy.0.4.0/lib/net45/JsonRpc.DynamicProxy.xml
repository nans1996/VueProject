<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JsonRpc.DynamicProxy</name>
    </assembly>
    <members>
        <member name="T:JsonRpc.DynamicProxy.Client.JsonRpcProxyBuilder">
            <summary>
            A builder class that at runtime implements the server-side methods
            defined in the contract interfaces with JSON RPC requests or notifications.
            </summary>
            <remarks>This class is thread-safe.</remarks>
        </member>
        <member name="P:JsonRpc.DynamicProxy.Client.JsonRpcProxyBuilder.ContractResolver">
            <summary>
            Contract resolver that maps the JSON RPC methods to CLR service methods.
            </summary>
        </member>
        <member name="P:JsonRpc.DynamicProxy.Client.JsonRpcProxyBuilder.RequestMarshaler">
            <summary>
            The request marshaler used to convert the CLR parameter values into JSON RPC ones.
            </summary>
        </member>
        <member name="M:JsonRpc.DynamicProxy.Client.JsonRpcProxyBuilder.CreateProxy(JsonRpc.Standard.Client.JsonRpcClient,System.Type)">
            <summary>
            Creates a proxy instance that implements the given stub type with JSON RPC.
            </summary>
            <param name="client">The JSON RPC client used to emit RPC requests.</param>
            <param name="stubType">The stub type (or contract) to be implemented. Should be an interface type.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="client"/> or <paramref name="stubType"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="stubType"/> is not a Type of interface.</exception>
            <returns>The implemented proxy instance, which can be casted to <paramref name="stubType"/> afterwards.</returns>
        </member>
        <member name="M:JsonRpc.DynamicProxy.Client.JsonRpcProxyBuilder.CreateProxy``1(JsonRpc.Standard.Client.JsonRpcClient)">
            <summary>
            Creates a proxy instance that implements the given stub type with JSON RPC.
            </summary>
            <typeparam name="T">The stub type (or contract) to be implemented. Should be an interface type.</typeparam>
            <param name="client">The JSON RPC client used to emit RPC requests.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="client"/> is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentException"><typeparamref name="T"/> is not a type of interface.</exception>
            <returns>The implemented proxy instance.</returns>
        </member>
        <member name="M:JsonRpc.DynamicProxy.Client.JsonRpcRealProxy.Send``1(System.Int32,System.Collections.IList)">
            <summary>
            Infrastructure. Sends the request and wait for the response.
            </summary>
        </member>
        <member name="M:JsonRpc.DynamicProxy.Client.JsonRpcRealProxy.Send(System.Int32,System.Collections.IList)">
            <summary>
            Infrastructure. Sends the notification; do not wait for the response.
            </summary>
        </member>
        <member name="M:JsonRpc.DynamicProxy.Client.JsonRpcRealProxy.SendAsync``1(System.Int32,System.Collections.IList)">
            <summary>
            Infrastructure. Asynchronously sends the request and wait for the response.
            </summary>
            <typeparam name="TResult">Response type.</typeparam>
            <param name="methodIndex">The JSON RPC method index in <see cref="F:JsonRpc.DynamicProxy.Client.JsonRpcRealProxy.MethodTable"/>.</param>
            <param name="paramValues">Parameters, in the order of expected parameter order.</param>
            <exception cref="T:JsonRpc.Standard.Client.JsonRpcRemoteException">An error has occurred on the remote-side.</exception>
            <exception cref="T:JsonRpc.Standard.Client.JsonRpcContractException">An error has occurred when generating the request or parsing the response.</exception>
            <exception cref="T:System.OperationCanceledException">The operation has been cancelled.</exception>
            <returns>The response.</returns>
        </member>
    </members>
</doc>
